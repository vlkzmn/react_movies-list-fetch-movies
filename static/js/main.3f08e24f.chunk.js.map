{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","onAddMovieToList","useState","query","setQuery","setMovie","loading","setLoading","prevQuery","useRef","htmlFor","type","id","placeholder","value","onChange","event","target","current","classNames","disabled","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieData","Title","Plot","imdbID","Poster","finally","App","setMovies","length","some","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f08e24f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovieToList: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovieToList }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null | false>(null);\n  const [loading, setLoading] = useState(false);\n  const prevQuery = useRef('');\n\n  const handleSubmit = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setLoading(true);\n    prevQuery.current = query;\n\n    getMovie(query)\n      .then(movieData => {\n        if ('Title' in movieData) {\n          setMovie({\n            title: movieData.Title,\n            description: movieData.Plot,\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n            imgUrl: movieData.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : movieData.Poster,\n          });\n        } else {\n          setMovie(false);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleAddToList = () => {\n    if (movie) {\n      onAddMovieToList(movie);\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {movie === false && query === prevQuery.current && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!query}\n              onClick={handleSubmit}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3c408b3f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const isInList = movies.some(item => item.imdbId === movie.imdbId);\n\n    if (!isInList) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {!!movies.length && (\n          <MoviesList movies={movies} />\n        )}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovieToList={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}